#include<set>
#include<map>
#include<list>
#include<queue>
#include<stack>
#include<string>
#include<math.h>
#include<time.h>
#include<vector>
#include<bitset>
#include<memory>
#include<utility>
#include<stdio.h>
#include<sstream>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
using namespace std;
int a[10010] = { 0 }, b[10010] = { 0 }, c[20020] = { 0 };//c=a*b，abc都是倒着存的
int la, lb, lc;//分别存a，b，c
int i, j;//循环控制变量
string ch;//读入时候用的
void chengfa(int x[10010], int y[10010], int z[20020], int lx, int ly)//乘法的过程
{
	for (i = 1; i <= lx; i++)//乘的过程
		for (j = 1; j <= ly; j++)
		{
			z[i + j - 1] += x[i] * y[j];//乘进去
			z[i + j] += z[i + j - 1] / 10;//进位
			z[i + j - 1] %= 10;//进位
		}
}
int main()
{
	/////////////////////读入部分///////////////////////////////////////////////////
	cin >> ch;//读入第一个数
	int haha = ch.size() - 1;//求出第一个数的长度
	la = 0;
	for (i = haha; i >= 0; i--)//倒着存到A数组内
	{
		la++;//这个也是存位数的
		a[la] = (int)(ch[i]) - 48; //存进去
	}
	cin >> ch;//读入第二个数
	haha = ch.size() - 1;//求出第二个数的长度
	lb = 0;
	for (i = haha; i >= 0; i--)//倒着存到B数组内
	{
		lb++;//这个也是存位数的
		b[lb] = (int)(ch[i]) - 48; //存进去
	}
	///////////////////////乘法部分/////////////////////////////////////////////////
	chengfa(a, b, c, la, lb);
	///////////////////////输出部分/////////////////////////////////////////////////
	if (a[1] == 0 && b[1] == 0) cout << 0;//特殊情况
	lc = la + lb;//c最长就这么长
	int hehe = 0;//标记用
	for (i = lc; i >= 1; i--)//存的时候是倒着存的这时候要倒着输出
	{
		if (c[i] != 0) hehe = 1;//找到第一个不为0的数
		if (hehe == 1) printf("%d", c[i]); //输出
	}
	return 0;
}